{
	"doc_type": "pipeline",
	"version": "3.0",
	"id": "24cc9881-f83a-4d38-b15b-8bf541e100fb",
	"app_data": {
	  "ui_data": {
		"name": "Simple Pipeline Flow Example",
		"description": "A basic example pipeline - just does load/filter/save",
		"class_name": "pipeline-flow-overall"
	  },
	  "wml_data": {
		"typeId": "stream"
	  }
	},
	"primary_pipeline": "simple-pipeline",
	"pipelines": [
	  {
		"id": "simple-pipeline",
		"nodes": [
		  {
			"id": "entryID1PE",
			"type": "binding",
			"op": "bind_input",
			"app_data": {
			  "ui_data": {
				"label": "Load",
				"image": "",
				"x_pos": 10,
				"y_pos": 10
			  }
			},
			"outputs": [
			  {
				"id": "entryPort1PE",
				"schema_ref": "schema1",
				"app_data": {
				  "ui_data": {
					"label": ""
				  }
				}
			  }
			],
			"connection": {
			  "ref": "d7c75790-90fc-4883-a5fc-3bb589166a52",
			  "project_ref": "0a0a20e8-e8a8-4710-b90a-6df3ff775b04",
			  "properties": {
				"schema_name": "GOSALES",
				"table_name": "PRODUCT_NAME_LOOKUP"
			  }
			}
		  },
		  {
			"id": "nodeID2PE",
			"type": "execution_node",
			"op": "org.apache.spark.ml.ibm.transformers.FilterColumns",
			"app_data": {
			  "wml_data": {
				"typeId": "filter-columns"
			  },
			  "ui_data": {
				"label": "Filter",
				"image": "",
				"x_pos": 189,
				"y_pos": 56,
				"description": "Filter columns"
			  }
			},
			"inputs": [
			  {
				"id": "input1NodeID2PE",
				"schema_ref": "schema1",
				"app_data": {
				  "ui_data": {
					"label": "input 1 Node ID2PE"
				  }
				},
				"links": [
				  {
					"id": "3f91ebcb-1357-40e5-bab3-55a93a444601",
					"node_id_ref": "entryID1PE"
				  }
				]
			  }
			],
			"outputs": [
			  {
				"id": "output1NodeID2PE",
				"schema_ref": "schema2",
				"app_data": {
				  "ui_data": {
					"label": "output 1 Node ID2PE"
				  }
				}
			  }
			],
			"parameters": {
			  "dropColumns": [
				"integer2",
				"double4"
			  ]
			}
		  },
		  {
			"id": "exitID1PE",
			"type": "binding",
			"op": "bind_output",
			"app_data": {
			  "ui_data": {
				"label": "Save",
				"image": "",
				"x_pos": 357,
				"y_pos": 121
			  }
			},
			"inputs": [
			  {
				"id": "exitPort1PE",
				"schema_ref": "schema2",
				"app_data": {
				  "ui_data": {
					"label": "exit Port 1PE"
				  }
				},
				"links": [
				  {
					"id": "01e100e6-6bba-4f97-9439-e935697e15bf",
					"node_id_ref": "nodeID2PE"
				  }
				]
			  }
			],
			"data_asset": {
			  "properties": {
				"name": "employee_data.csv"
			  }
			}
		  }
		],
		"app_data": {
		  "ui_data": {
			"zoom": {
			  "x": 0,
			  "y": 0,
			  "k": 1
			},
			"comments": []
		  }
		},
		"runtime_ref": "scala-spark-2.0.1"
	  }
	],
	"schemas": [
	  {
		"id": "schema1",
		"fields": [
		  {
			"name": "integer2",
			"type": "integer",
			"nullable": false,
			"metadata": {
			  "description": "Field integer2 is an integer field",
			  "measure": "range",
			  "modeling_role": "input",
			  "range": {
				"min": -1,
				"max": 400
			  }
			}
		  },
		  {
			"name": "double4",
			"type": "double",
			"nullable": false,
			"metadata": {
			  "description": "Field double4 is a double field",
			  "measure": "range",
			  "modeling_role": "input",
			  "range": {
				"min": 0.101,
				"max": 100.211
			  }
			}
		  },
		  {
			"name": "string1",
			"type": "string",
			"nullable": true,
			"metadata": {
			  "description": "Field string1 is a string field",
			  "measure": "set",
			  "modeling_role": "input",
			  "max_length": 24,
			  "values": [
				"One",
				"Two",
				"Three"
			  ]
			}
		  }
		]
	  },
	  {
		"id": "schema2",
		"fields": [
		  {
			"name": "string1",
			"type": "string",
			"nullable": true,
			"metadata": {
			  "description": "Field string1 is a string field",
			  "measure": "set",
			  "modeling_role": "input",
			  "max_length": 24,
			  "values": [
				"One",
				"Two",
				"Three"
			  ]
			}
		  }
		]
	  }
	],
	"runtimes": [
	  {
		"id": "scala-spark-2.0.1",
		"name": "Scala-Spark",
		"version": "2.0.1"
	  }
	],
	"json_schema": "https://api.dataplatform.ibm.com/schemas/common-pipeline/pipeline-flow/pipeline-flow-v3-schema.json"
  }
